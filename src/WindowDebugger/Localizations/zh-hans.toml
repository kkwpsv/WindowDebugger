App.UI.AboutButton = "关于"
App.UI.CaptureButton.Content = "捕获"
App.UI.CaptureButton.ToolTip.Description = "点击此按钮后，下一次鼠标点击的窗口将被捕获并在此列表中选中。"
App.UI.CaptureButton.ToolTip.Title = "捕获窗口"
App.UI.Filter.FilterDescription = "默认在列表中显示顶层可见窗口，勾选以显示更多窗口。"
App.UI.Filter.FilterTitle = "包含窗口"
App.UI.Filter.GroupByPlainList = "无（以列表显示窗口）"
App.UI.Filter.GroupByProcessThenWindow = "进程 / 窗口"
App.UI.Filter.GroupByProcessThenWindowTree = "进程 / 顶层窗口 / 子窗口"
App.UI.Filter.GroupByPlainListSlim = "窗口"
App.UI.Filter.GroupByProcessThenWindowSlim = "进程/窗口"
App.UI.Filter.GroupByProcessThenWindowTreeSlim = "进程/子窗口"
App.UI.Filter.GroupByWindowTreeSlim = "子窗口"
App.UI.Filter.GroupByWindowTree = "顶层窗口 / 子窗口"
App.UI.Filter.GroupTitle = "分组"
App.UI.Filter.IncludingAllSlim = "所有窗口"
App.UI.Filter.IncludingChildWindow = "子窗口"
App.UI.Filter.IncludingEmptyTitleWindow = "无标题窗口"
App.UI.Filter.IncludingInvisibleWindow = "不可见窗口"
App.UI.Filter.IncludingMessageOnlyWindow = "纯消息窗口"
App.UI.Filter.IncludingNoneSlim = "顶层可见"
App.UI.Filter.IncludingPartialSlim = "部分窗口"
App.UI.Filter.SearchIncluding = "搜索"
App.UI.Filter.SearchIncludingHwnd = "句柄（需完全匹配）"
App.UI.Filter.SearchIncludingProcessName = "进程名"
App.UI.Filter.SearchIncludingTitle = "标题"
App.UI.Filter.SearchIncludingXid = "XID（需完全匹配）"
App.UI.Filter.SearchTitle = "搜索"
App.UI.Filter.SortById = "按句柄排序"
App.UI.Filter.SortByRaw = "不排序"
App.UI.Filter.SortByIdSlim = "排序：句柄"
App.UI.Filter.SortByRawSlim = "排序：无"
App.UI.Filter.SortByTitleSlim = "排序：标题"
App.UI.Filter.SortByTitle = "按窗口标题排序"
App.UI.Filter.SortByXid = "按 XID 排序"
App.UI.Filter.SortTitle = "排序"
App.UI.ReloadButton.Content = "刷新"
App.UI.ReloadButton.ToolTip.Description = "重新获取所有的窗口列表。"
App.UI.ReloadButton.ToolTip.Title = "刷新"
App.UI.SearchWatermark = "搜索"
App.UI.SettingsButton = "设置"
App.UI.TopmostButton.Content = "置顶"
App.UI.TopmostButton.ToolTip.Description = "将当前窗口置顶显示。"
App.UI.TopmostButton.ToolTip.Title = "置顶"
App.UI.UacButton.Content = "管理员"
App.UI.UacButton.ToolTip.Description = "以管理员权限重新启动此程序，以便可以查看和修改高权限窗口的信息。"
App.UI.UacButton.ToolTip.Title = "管理员权限"
App.UI.WindowDetail.ChangeButton = "修改"
App.UI.WindowDetail.EmptyWindowName = "无标题窗口"
App.UI.WindowDetail.OpenDirectory.Content = "打开文件夹"
App.UI.WindowDetail.OpenDirectory.ToolTip.Description = "在默认的文件管理器中查看此程序。"
App.UI.WindowDetail.OpenDirectory.ToolTip.Title = "打开文件夹"
App.UI.WindowDetail.Pages.Linux.Info.Bounds.Description = "父窗口坐标系"
App.UI.WindowDetail.Pages.Linux.Info.Bounds.Height = "高"
App.UI.WindowDetail.Pages.Linux.Info.Bounds.Left = "左"
App.UI.WindowDetail.Pages.Linux.Info.Bounds.Title = "位置和大小"
App.UI.WindowDetail.Pages.Linux.Info.Bounds.Top = "上"
App.UI.WindowDetail.Pages.Linux.Info.Bounds.Width = "宽"
App.UI.WindowDetail.Pages.Linux.Info.Title = "信息"
App.UI.WindowDetail.Pages.Linux.Operations.Title = "操作"
App.UI.WindowDetail.Pages.Linux.Properties.Title = "属性"
App.UI.WindowDetail.Pages.Windows.ClassStyles.DocumentLink = "https://learn.microsoft.com/zh-cn/windows/win32/winmsg/window-class-styles"
App.UI.WindowDetail.Pages.Windows.ClassStyles.FullTitle = "Window Class Styles"
App.UI.WindowDetail.Pages.Windows.ClassStyles.Title = "窗口类样式"
App.UI.WindowDetail.Pages.Windows.Dwm.DocumentLink = "https://learn.microsoft.com/zh-cn/windows/win32/api/dwmapi/ne-dwmapi-dwmwindowattribute"
App.UI.WindowDetail.Pages.Windows.Dwm.DwmIsCompositionEnabled.False = "❌系统 DWM 已禁用，无法使用以下设置。"
App.UI.WindowDetail.Pages.Windows.Dwm.DwmIsCompositionEnabled.True = "系统 DWM 已启用，以下设置可用。"
App.UI.WindowDetail.Pages.Windows.Dwm.DWMWA_CAPTION_BUTTON_BOUNDS = "标题栏按钮区域 (矩形)"
App.UI.WindowDetail.Pages.Windows.Dwm.DWMWA_CLOAK = "遮盖窗口，使其对用户不可见"
App.UI.WindowDetail.Pages.Windows.Dwm.DWMWA_CLOAKED = "窗口已被遮盖"
App.UI.WindowDetail.Pages.Windows.Dwm.DWMWA_DISALLOW_PEEK = "不显示窗口的速览预览"
App.UI.WindowDetail.Pages.Windows.Dwm.DWMWA_EXCLUDED_FROM_PEEK = "防止在调用速览时窗口褪色到玻璃板"
App.UI.WindowDetail.Pages.Windows.Dwm.DWMWA_EXTENDED_FRAME_BOUNDS = "扩展框架区域 (矩形)"
App.UI.WindowDetail.Pages.Windows.Dwm.DWMWA_FLIP3D_POLICY = "Flip3D 处理窗口策略"
App.UI.WindowDetail.Pages.Windows.Dwm.DWMWA_FORCE_ICONIC_REPRESENTATION = "强制窗口显示图标缩略图或速览预览"
App.UI.WindowDetail.Pages.Windows.Dwm.DWMWA_FREEZE_REPRESENTATION = "使用当前视觉对象冻结窗口的缩略图"
App.UI.WindowDetail.Pages.Windows.Dwm.DWMWA_HAS_ICONIC_BITMAP = "提供图标缩略图或速览预览"
App.UI.WindowDetail.Pages.Windows.Dwm.DWMWA_NCRENDERING_ENABLED = "是否已启用非客户端呈现"
App.UI.WindowDetail.Pages.Windows.Dwm.DWMWA_NCRENDERING_POLICY = "非客户端呈现策略"
App.UI.WindowDetail.Pages.Windows.Dwm.DWMWA_NONCLIENT_RTL_LAYOUT = "非客户端内容是否为从右到左 (RTL) 镜像"
App.UI.WindowDetail.Pages.Windows.Dwm.DWMWA_TRANSITIONS_FORCEDISABLED = "启用或强制禁用 DWM 转换"
App.UI.WindowDetail.Pages.Windows.Dwm.FullTitle = "桌面窗口管理器 Desktop Window Manager"
App.UI.WindowDetail.Pages.Windows.Dwm.Title = "DWM"
App.UI.WindowDetail.Pages.Windows.Info.Bounds.Description = "屏幕坐标系"
App.UI.WindowDetail.Pages.Windows.Info.Bounds.Height = "高"
App.UI.WindowDetail.Pages.Windows.Info.Bounds.Left = "左"
App.UI.WindowDetail.Pages.Windows.Info.Bounds.Title = "位置和大小"
App.UI.WindowDetail.Pages.Windows.Info.Bounds.Top = "上"
App.UI.WindowDetail.Pages.Windows.Info.Bounds.Width = "宽"
App.UI.WindowDetail.Pages.Windows.Info.ClassName = "窗口类\nClass Name"
App.UI.WindowDetail.Pages.Windows.Info.Dpi = "DPI"
App.UI.WindowDetail.Pages.Windows.Info.DpiAwareness = "DPI 感知级别"
App.UI.WindowDetail.Pages.Windows.Info.OwnerWindowHandle = "所有者窗口\nOwner"
App.UI.WindowDetail.Pages.Windows.Info.ParentWindowHandle = "父窗口\nParent"
App.UI.WindowDetail.Pages.Windows.Info.ProcessId = "进程 ID"
App.UI.WindowDetail.Pages.Windows.Info.ProcessName = "进程名"
App.UI.WindowDetail.Pages.Windows.Info.ThreadId = "线程 ID"
App.UI.WindowDetail.Pages.Windows.Info.Title = "信息"
App.UI.WindowDetail.Pages.Windows.Info.WindowDisplayAffinity = "显示相关性\nDisplay Affinity"
App.UI.WindowDetail.Pages.Windows.Info.WindowHandle = "句柄"
App.UI.WindowDetail.Pages.Windows.Info.WindowShowStates = "显示状态\nShow States"
App.UI.WindowDetail.Pages.Windows.Info.WindowTitle = "窗口标题"
App.UI.WindowDetail.Pages.Windows.Operations.ProcessOperations.Description = "操作窗口所在的进程。"
App.UI.WindowDetail.Pages.Windows.Operations.ProcessOperations.ForceKill.Action = "强制杀死进程"
App.UI.WindowDetail.Pages.Windows.Operations.ProcessOperations.ForceKill.Description = "调用 CreateRemoteThread 函数在此窗口所在进程的虚拟地址空间中运行线程，然后调用 CloseHandle 函数关闭进程句柄。"
App.UI.WindowDetail.Pages.Windows.Operations.ProcessOperations.Kill.Action = "结束进程"
App.UI.WindowDetail.Pages.Windows.Operations.ProcessOperations.Kill.Description = "调用 TerminateProcess 函数终止此窗口所在的进程及其所有线程。"
App.UI.WindowDetail.Pages.Windows.Operations.ProcessOperations.Title = "进程操作"
App.UI.WindowDetail.Pages.Windows.Operations.ThreadOperations.Description = "操作窗口所在的线程。"
App.UI.WindowDetail.Pages.Windows.Operations.ThreadOperations.Kill.Action = "终止线程"
App.UI.WindowDetail.Pages.Windows.Operations.ThreadOperations.Kill.Description = "调用 TerminateThread 函数终止线程。"
App.UI.WindowDetail.Pages.Windows.Operations.ThreadOperations.Resume.Action = "恢复线程"
App.UI.WindowDetail.Pages.Windows.Operations.ThreadOperations.Resume.Description = "调用 ResumeThread 函数递减线程的挂起计数。当暂停计数减为零时，将恢复线程的执行。"
App.UI.WindowDetail.Pages.Windows.Operations.ThreadOperations.Suspend.Action = "暂停线程"
App.UI.WindowDetail.Pages.Windows.Operations.ThreadOperations.Suspend.Description = "调用 SuspendThread 函数挂起窗口所在的线程。"
App.UI.WindowDetail.Pages.Windows.Operations.ThreadOperations.Title = "线程操作"
App.UI.WindowDetail.Pages.Windows.Operations.Title = "操作"
App.UI.WindowDetail.Pages.Windows.Operations.WindowInteractions.Description = "调用 Win32 API 对窗口进行其他操作。"
App.UI.WindowDetail.Pages.Windows.Operations.WindowInteractions.FlashWindow.Action = "闪烁窗口"
App.UI.WindowDetail.Pages.Windows.Operations.WindowInteractions.FlashWindow.Description = "调用 Flash Window 将指定的窗口闪烁一次。它不会更改窗口的活动状态。"
App.UI.WindowDetail.Pages.Windows.Operations.WindowInteractions.RedrawWindow.Action = "更新窗口"
App.UI.WindowDetail.Pages.Windows.Operations.WindowInteractions.RedrawWindow.Description = "调用 RedrawWindow 函数更新窗口工作区中的全部区域。"
App.UI.WindowDetail.Pages.Windows.Operations.WindowInteractions.Title = "窗口其他操作"
App.UI.WindowDetail.Pages.Windows.Operations.WindowOperation.Close.Action = "关闭窗口"
App.UI.WindowDetail.Pages.Windows.Operations.WindowOperation.Close.Description = "触发 WM_CLOSE 消息关闭窗口。"
App.UI.WindowDetail.Pages.Windows.Operations.WindowOperation.Description = "调用 Win32 API 对窗口进行常用操作。"
App.UI.WindowDetail.Pages.Windows.Operations.WindowOperation.SetForeground.Action = "激活窗口"
App.UI.WindowDetail.Pages.Windows.Operations.WindowOperation.SetForeground.Description = "调用 SetForegroundWindow 函数将创建指定窗口的线程引入前台并激活窗口。"
App.UI.WindowDetail.Pages.Windows.Operations.WindowOperation.Title = "窗口常用操作"
App.UI.WindowDetail.Pages.Windows.Others.ConVirtualDesktopId = "虚拟桌面标识符"
App.UI.WindowDetail.Pages.Windows.Others.IsTouchWindow = "是否支持触摸"
App.UI.WindowDetail.Pages.Windows.Others.Title = "其他"
App.UI.WindowDetail.Pages.Windows.StyleExes.DocumentLink = "https://learn.microsoft.com/zh-cn/windows/win32/winmsg/extended-window-styles"
App.UI.WindowDetail.Pages.Windows.StyleExes.FullTitle = "Extended Window Styles"
App.UI.WindowDetail.Pages.Windows.StyleExes.Title = "扩展窗口样式"
App.UI.WindowDetail.Pages.Windows.Styles.DocumentLink = "https://learn.microsoft.com/zh-cn/windows/win32/winmsg/window-styles"
App.UI.WindowDetail.Pages.Windows.Styles.FullTitle = "Window Styles"
App.UI.WindowDetail.Pages.Windows.Styles.Title = "窗口样式"
App.UI.WindowDetail.ReloadButton.Content = "重新加载"
App.UI.WindowDetail.ReloadButton.ToolTip.Description = "重新获取此窗口的所有信息，并显示在界面上。"
App.UI.WindowDetail.ReloadButton.ToolTip.Title = "重新加载"
Dynamic.EnumValues.DPI_AWARENESS.DPI_AWARENESS_INVALID = "无效"
Dynamic.EnumValues.DPI_AWARENESS.DPI_AWARENESS_PER_MONITOR_AWARE = "每个监视器感知"
Dynamic.EnumValues.DPI_AWARENESS.DPI_AWARENESS_SYSTEM_AWARE = "系统感知"
Dynamic.EnumValues.DPI_AWARENESS.DPI_AWARENESS_UNAWARE = "不知道"
Product.LocalizedName = "Window Debugger - 少珺窗口调试神器"
